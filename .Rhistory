lines(f(t) ~ t, col = "green")
lines(g(t) ~ t, col = "grey")
plot(f(g(t)) ~ t, type = "l", ylim = c(0, 10))
lines(f(t) * g(t) ~ t, col = "blue")
lines(f(t) + g(t) ~ t, col = "red")
lines(f(t) ~ t, col = "green")
lines(g(t) ~ t, col = "grey")
t <- seq(0, 3, .001)
plot(f(g(t)) ~ t, type = "l", ylim = c(0, 10))
lines(f(t) * g(t) ~ t, col = "blue")
lines(f(t) + g(t) ~ t, col = "red")
lines(f(t) ~ t, col = "green")
lines(g(t) ~ t, col = "grey")
t <- seq(0, 3, .001)
plot(f(t) ~ t, type = "l", ylim = c(0, 10))
lines(g(t) ~ t, col = "grey")
lines(f(t) + g(t) ~ t, col = "red")
lines(f(t) * g(t) ~ t, col = "blue")
lines(f(g(t)) ~ t, col = "green"
t <- seq(0, 3, .001)
plot(f(t) ~ t, type = "l", ylim = c(0, 10))
lines(g(t) ~ t, col = "grey")
lines(f(t) + g(t) ~ t, col = "red")
lines(f(t) * g(t) ~ t, col = "blue")
lines(f(g(t)) ~ t, col = "green")
t <- seq(0, 3, .001)
plot(f(t) ~ t, type = "l", ylim = c(0, 10))
text(c(1.4, .5, expression(f(x))))
t <- seq(0, 3, .001)
plot(f(t) ~ t, type = "l", ylim = c(0, 10))
text(c(1.4, .5), labels = "f(x)")
lines(g(t) ~ t, col = "grey")
lines(f(t) + g(t) ~ t, col = "red")
lines(f(t) * g(t) ~ t, col = "blue")
lines(f(g(t)) ~ t, col = "green")
t <- seq(0, 3, .001)
plot(f(t) ~ t, type = "l", ylim = c(0, 10))
text(1.4, labels = "f(x)")
lines(g(t) ~ t, col = "grey")
lines(f(t) + g(t) ~ t, col = "red")
lines(f(t) * g(t) ~ t, col = "blue")
lines(f(g(t)) ~ t, col = "green")
?text
t <- seq(0, 3, .001)
plot(f(t) ~ t, type = "l", ylim = c(0, 10))
text(2.7, .4, labels = "f(x)")
lines(g(t) ~ t, col = "grey")
lines(f(t) + g(t) ~ t, col = "red")
lines(f(t) * g(t) ~ t, col = "blue")
lines(f(g(t)) ~ t, col = "green")
t <- seq(0, 3, .001)
plot(f(t) ~ t, type = "l", ylim = c(0, 10))
text(2.8, .3, labels = "f(x)")
lines(g(t) ~ t, col = "grey")
lines(f(t) + g(t) ~ t, col = "red")
lines(f(t) * g(t) ~ t, col = "blue")
lines(f(g(t)) ~ t, col = "green")
t <- seq(0, 3, .001)
plot(f(t) ~ t, type = "l", ylim = c(0, 10))
text(2.8, .3, labels = "f(x)")
lines(g(t) ~ t, col = "grey")
lines(f(t) + g(t) ~ t, col = "red")
lines(f(t) * g(t) ~ t, col = "blue")
text(2.6, 1.8, "f(x) * g(x)")
lines(f(g(t)) ~ t, col = "green")
t <- seq(0, 3, .001)
plot(f(t) ~ t, type = "l", ylim = c(0, 10))
text(2.8, .3, labels = "f(x)")
lines(g(t) ~ t, col = "grey")
lines(f(t) + g(t) ~ t, col = "red")
lines(f(t) * g(t) ~ t, col = "blue")
text(2.8, 1.8, "f(x) * g(x)", col = "blue")
lines(f(g(t)) ~ t, col = "green")
t <- seq(0, 3, .001)
plot(f(t) ~ t, type = "l", ylim = c(0, 10))
text(2.8, .3, labels = "f(x)")
lines(g(t) ~ t, col = "grey")
lines(f(t) + g(t) ~ t, col = "red")
lines(f(t) * g(t) ~ t, col = "blue")
text(2.8, 1.8, "f(x) * g(x)", col = "blue")
lines(f(g(t)) ~ t, col = "green")
text(1.5, .3, "f(g(x))", col = "green")
t <- seq(0, 3, .001)
plot(f(t) ~ t, type = "l", ylim = c(0, 10))
text(2.8, .3, labels = "f(x)")
lines(g(t) ~ t, col = "grey")
lines(f(t) + g(t) ~ t, col = "red")
text(2.8. 5.6, "f(x) + g)=(x)", col = "red")
t <- seq(0, 3, .001)
plot(f(t) ~ t, type = "l", ylim = c(0, 10))
text(2.8, .3, labels = "f(x)")
lines(g(t) ~ t, col = "grey")
lines(f(t) + g(t) ~ t, col = "red")
text(2.8, 5.6, "f(x) + g)=(x)", col = "red")
lines(f(t) * g(t) ~ t, col = "blue")
text(2.8, 1.8, "f(x) * g(x)", col = "blue")
lines(f(g(t)) ~ t, col = "green")
text(1.5, .3, "f(g(x))", col = "green")
t <- seq(0, 3, .001)
plot(f(t) ~ t, type = "l", ylim = c(0, 10))
text(2.8, .3, labels = "f(x)")
lines(g(t) ~ t, col = "grey")
lines(f(t) + g(t) ~ t, col = "red")
text(2.8, 3.6, "f(x) + g)=(x)", col = "red")
lines(f(t) * g(t) ~ t, col = "blue")
text(2.8, 1.8, "f(x) * g(x)", col = "blue")
lines(f(g(t)) ~ t, col = "green")
text(1.5, .3, "f(g(x))", col = "green")
t <- seq(0, 3, .001)
plot(f(t) ~ t, type = "l", ylim = c(0, 10))
text(2.8, .3, labels = "f(x)")
lines(g(t) ~ t, col = "grey")
lines(f(t) + g(t) ~ t, col = "red")
text(2.8, 3.6, "f(x) + g)=(x)", col = "red")
lines(f(t) * g(t) ~ t, col = "blue")
text(2.1, 8, "f(x) * g(x)", col = "blue")
lines(f(g(t)) ~ t, col = "green")
text(1.5, .3, "f(g(x))", col = "green")
t <- seq(0, 3, .001)
plot(f(t) ~ t, type = "l", ylim = c(0, 10))
text(2.8, .3, labels = "f(x)")
lines(g(t) ~ t, col = "grey")
lines(f(t) + g(t) ~ t, col = "red")
text(2.8, 3.6, "f(x) + g)=(x)", col = "red")
lines(f(t) * g(t) ~ t, col = "blue")
text(2.3, 8, "f(x) * g(x)", col = "blue")
lines(f(g(t)) ~ t, col = "green")
text(1.5, .3, "f(g(x))", col = "green")
t <- seq(0, 3, .001)
plot(f(t) ~ t, type = "l", ylim = c(0, 10))
text(2.8, .3, labels = "f(x)")
lines(g(t) ~ t, col = "grey")
text(2.6, 6.1, "g(x)", col = "grey")
lines(f(t) + g(t) ~ t, col = "red")
text(2.8, 3.6, "f(x) + g)=(x)", col = "red")
lines(f(t) * g(t) ~ t, col = "blue")
text(2.3, 8, "f(x) * g(x)", col = "blue")
lines(f(g(t)) ~ t, col = "green")
text(1.5, .3, "f(g(x))", col = "green")
x <- seq(0, 3, .001)
plot(f(x) ~ x, type = "l", ylim = c(0, 10))
text(2.8, .3, labels = "f(x)")
lines(g(x) ~ x, col = "grey")
text(2.6, 6.1, "g(x)", col = "grey")
lines(f(x) + g(x) ~ x, col = "red")
text(2.8, 3.6, "f(x) + g)=(x)", col = "red")
lines(f(x) * g(x) ~ x, col = "blue")
text(2.3, 8, "f(x) * g(x)", col = "blue")
lines(f(g(x)) ~ x, col = "green")
text(1.5, .3, "f(g(x))", col = "green")
x <- seq(0, 3, .001)
plot(f(x) ~ x, type = "l", ylim = c(0, 10), ylab = NULL)
text(2.8, .3, labels = "f(x)")
lines(g(x) ~ x, col = "grey")
text(2.6, 6.1, "g(x)", col = "grey")
lines(f(x) + g(x) ~ x, col = "red")
text(2.8, 3.6, "f(x) + g)=(x)", col = "red")
lines(f(x) * g(x) ~ x, col = "blue")
text(2.3, 8, "f(x) * g(x)", col = "blue")
lines(f(g(x)) ~ x, col = "green")
text(1.5, .3, "f(g(x))", col = "green")
x <- seq(0, 3, .001)
plot(f(x) ~ x, type = "l", ylim = c(0, 10), ylab = "")
text(2.8, .3, labels = "f(x)")
lines(g(x) ~ x, col = "grey")
text(2.6, 6.1, "g(x)", col = "grey")
lines(f(x) + g(x) ~ x, col = "red")
text(2.8, 3.6, "f(x) + g)=(x)", col = "red")
lines(f(x) * g(x) ~ x, col = "blue")
text(2.3, 8, "f(x) * g(x)", col = "blue")
lines(f(g(x)) ~ x, col = "green")
text(1.5, .3, "f(g(x))", col = "green")
x <- seq(0, 3, .001)
plot(f(x) ~ x, type = "l", ylim = c(0, 10), ylab = "")
text(2.8, .3, labels = "f(x)")
lines(g(x) ~ x, col = "grey")
text(2.6, 6.1, "g(x)", col = "grey")
lines(f(x) + g(x) ~ x, col = "red")
text(2.8, 3.6, "f(x) + g(x)", col = "red")
lines(f(x) * g(x) ~ x, col = "blue")
text(2.3, 8, "f(x) * g(x)", col = "blue")
lines(f(g(x)) ~ x, col = "green")
text(1.5, .3, "f(g(x))", col = "green")
citr:::insert_citation()
exp(0)
exp(-Inf)
exp(Inf)
install.packages("optimx")
library(rstan)
example(stan_model, package = "rstan", run.dontrun = TRUE)
fit
curve(sin(X)/X, from = 0, 10)
curve(expression(sin(X)/X), from = 0, 10)
f <- expression(sin(x)/x)
curve(expression(f, from = 0, 10)
curve(f, from = 0, 10)
f <- expression(sin(x)/x)
curve(f, from = 0, 10)
f <- function(x) sin(x)/x
curve(f, from = 0, 10)
curve(f, from = .5, 1.5)
curve(sin(x)/x, from = .5, to = 1.5)
curve(sin(x)/x, from = .5, to = 1.5)
curve(sin(x)/x, from = .5, to = 1.5, col = "blue")
curve(sin(x)/x, from = .5, to = 1.5, col = "blue",
ylim = c(.4, 1.5))
curve(sin(x)/x, from = .5, to = 1.5, col = "blue",
ylim = c(.4, 1.5), xlim = c(.4, 1.6))
f(1)
f(x)
f(0)
f(.00000001)
f(1e-1)
f(1e-2)
f(1e-3)
f(1e-4)
f(1e-4000)
f(1e-400)
f(1e-40)
f(1e-90)
f(1e-99)
f(1e-200)
f(1e-300)
f(1e-400)
f(1e-350)
f(1e-325)
f(1e-312)
f(1e-320)
f(1e-323)
f(1e-324)
f(1e-323)
f(1e-323.5)
f(1e-323)
f(1e-324)
f(1)
f(100)
curve(f, from = 0, to = 100)
curve(f, from = 0, to = 1000)
curve(f, from = 0, to = 10000)
curve(f, from = 0, to = 100000)
curve(f, from = 0, to = 100)
curve(f, from = 0, to = 10)
curve(f, from = 0, to = 100)
curve(f, from = 0, to = 1000)
curve(f, from = -1, to = 1)
(x^2 - x - 6)/(6*x^2 - 19*x + 3)
f2 <- function(x) {
(x^2 - x - 6)/(6*x^2 - 19*x + 3)
}
curve(f2, from = 2.5, to = 3.5)
curve(f2, from = 2.5, to = 3.5)
f2(seq(2.5, 3.5, out.length = 7))
f2(seq(2.5, 3.5, length = 7))
f2(seq(2.9, 3.1, length = 7))
round(f2(seq(2.9, 3.1, length = 7)), 5)
seq(2.9, 3.1, length = 7)
round(f2(seq(2.9, 3.1, length = 7)), 6)
ifelse(x < 0, x + 1, -x^2 + 1)
f3 <- function(x) {
ifelse(x < 0, x + 1, -x^2 + 1)
}
curve(f3, -1, 1)
abline(v=0)
curve(f3, -1, 1, col = "blue")
abline(v=0)
library(ggplot2)
ggplot(data.frame(x = seq(-1, 1, .001)), aes(x)) +
stat_function(fun = f3(x))
data.frame(x = seq(-1, 1, .001))
data <-
ggplot(data.frame(x = seq(-1, 1, .001)), aes(x)) +
stat_function(fun = f3(x)) + geom_line()
stat_function(fun = f3 + geom_line()
data <-
ggplot(data.frame(x = seq(-1, 1, .001)), aes(x)) +
stat_function(fun = f3) + geom_line()
data <-
ggplot(data.frame(x = seq(-1, 1, .001)), aes(x)) +
stat_function(fun = f3)
f3 <- function(x) {
ifelse(x < 0, x + 1, -x^2 + 1)
}
data <-
ggplot(data.frame(x = seq(-1, 1, .001)), aes(x)) +
stat_function(fun = f3(x)) +
geom_line()
dat <- data.frame(x = seq(-1, 1, .001))
ggplot(dat, aes(x)) +
stat_function(fun = f3(x)) +
ggplot(dat, aes(x)) +
stat_function(fun = f3(x))
dat <- data.frame(x = seq(-1, 1, .001))
ggplot(dat, aes(x)) +
stat_function(fun = f3(x))
ggplot(dat, aes(x)) + stat_function(fun = f3
ggplot(dat, aes(x)) + stat_function(fun = f3)
ggplot(dat, aes(x)) + stat_function(fun = f3, color = "blue")
ggplot(dat, aes(x)) + stat_function(fun = f3, color = "blue") +
geom_abline(v = 0)
ggplot(dat, aes(x)) + stat_function(fun = f3, color = "blue") +
geom_abline(v = 0)
ggplot(dat, aes(x)) + stat_function(fun = f3, color = "blue") +
geom_vbline(0)
ggplot(dat, aes(x)) + stat_function(fun = f3, color = "blue") +
geom_vline(0)
ggplot(dat, aes(x)) + stat_function(fun = f3, color = "blue") +
geom_vline(xintercept = 0)
curve(f3, -1, 1, col = "blue")
abline(v=0)
f4 <- function(x) {
ifelse(x > 1, x, x^2 - 2*x + 3)
}
curve(f4, 0, 2)
x <- c(seq(0, .9999, .001), seq(1.001, 2, .001))
lines(f4(x), )
x <- c(seq(0, .9999, .001), seq(1.001, 2, .001))
plot(f4(x) ~ x, type = "l")
plot(f4(x) ~ x, type = "l")
f4 <- function(x) {
ifelse(x > 1, x, x^2 - 2*x + 3)
}
x <- c(seq(0, .99, .001), seq(1.01, 2, .001))
plot(f4(x) ~ x, type = "l")
which(x == 1)
plot(f4(x)[x < 1] ~ x, type = "l")
x <- c(seq(0, .99, .001), seq(1.01, 2, .001))
plot(f4(x)[x < 1] ~ x, type = "l")
plot(f4(x) ~ x, type = "l")
abline(v = 0, col = "white")
plot(f4(x) ~ x, type = "l")
abline(v = 0, col = "white")
curve(f4, 0, 2)
abline(v = 1, col = "white")
abline(v = 1, col = "white", lwd = 2)
abline(v = 1, col = "white", lwd = 4)
abline(v = 1, col = "white", lwd = 4
6)
abline(v = 1, col = "white", lwd = 6)
abline(v = 1, col = "white", lwd = 12)
a <- function(x){
ifelse(( x < 1),x^2-1,ifelse((1<x & x<2),x^3-5, ifelse((x>2.1),5 - 2*x, NA)))
}
plot(a,xlim=c(-3,5), ylim = c(-4, 7), col = "red")
abline(v = 0, h = 0)
f4 <- function(x) {
ifelse(x > 1, x, ifelse(x < 1, x^2 - 2*x + 3, NA))
}
x <- c(seq(0, .99, .001), seq(1.01, 2, .001))
plot(f4(x) ~ x, type = "l")
abline(v = 0, col = "white")
plot(f4)
plot(f4, xlim = c(0, 2))
x <- c(seq(0, .99, .001), seq(1.01, 2, .001))
plot(f4(x) ~ x, type = "l")
f4 <- function(x) {
ifelse(x > 1,
x,
ifelse(x < 1,
x^2 - 2*x + 3,
NA))
}
x <- c(seq(0, .99, .001), seq(1.01, 2, .001))
plot(f4(x) ~ x, type = "l")
plot(f4, xlim = c(0, 2))
?Vector
??Vectorize
?Vectorize
plot(f4, xlim = c(0, 2))
abline(v = 0, col = "white")
plot(f4, xlim = c(0, 2))
abline(v = 0, col = "white")
plot(f4, xlim = c(0, 2))
f5 <- function(x) {
1/(x - 1)^2
}
plot(f5, xlim = c(0, 2))
abline(v = 1)
plot(f5, xlim = c(0, 2), col = "blue")
abline(v = 1)
abline(v = 1, lty = 2)
plot(f5, xlim = c(0, 2), col = "blue")
abline(v = 1, lty = 2)
plot(f5, xlim = c(0, 2), ylim = c(0, 100), col = "blue")
abline(v = 1, lty = 2)
f5(1.5)
f5(.5)
f5(.5)
f5 <- function(x) {
1/(x - 1)^2
}
f5(.5)
f5(.0005)
f5(.0005)
f6 <- function(x) sin(1/x)
plot(f6, xlim = c(-1, 1))
f6 <- function(x) sin((1/x))
plot(f6, xlim = c(-1, 1))
f6 <- function(x) sin(1/x)
plot(f6, xlim = c(-1, 1))
plot(f6, xlim = c(-1, 1))
x <- seq(-1, 1, .0001)
plot(f6(x) ~ x, type = "l")
plot(f6(x) ~ x, type = "l", col = "blue")
plot(f6(x) ~ x, type = "l", xlim = c(-.1, .1))
plot(f6(x) ~ x, type = "l", xlim = c(-.1, .1), col = "blue")
plot(f6(x) ~ x, type = "l", xlim = c(-.001, .001), col = "blue")
x <- seq(-1, 1, .000001)
plot(f6, xlim = c(-1, 1))
plot(f6(x) ~ x, type = "l", col = "blue")
plot(f6(x) ~ x, type = "l", xlim = c(-.001, .001), col = "blue")
h <- function(x) -1.5*x^2 + 11.5*x
plot(h, xlim = c(0, 6))
plot(h, xlim = c(0, 6), col = "blue")
rm(h)
f7 <- function(x) -1.5*x^2 + 11.5*x
f <- function(x) -1.5*x^2 + 11.5*x
rm(f7)
abline(10, f(5)-f(1)/5-1, col = "red")
plot(h, xlim = c(0, 6), col = "blue")
plot(f, xlim = c(0, 6), col = "blue")
abline(10, (f(5)-f(1))/(5-1), col = "red")
points(x= c(1,5), y = c(f(1), f(5))
)
plot(f, xlim = c(0, 6), col = "blue")
abline(1\0, (f(5)-f(1))/(5-1), col = "red")
abline(0, (f(5)-f(1))/(5-1), col = "red")
points(x= c(1,5), y = c(f(1), f(5)))
b <- (f(5)-f(1))/(5-1)
plot(f, xlim = c(0, 6), col = "blue")
abline(10-b, (f(5)-f(1))/(5-1), col = "red")
points(x= c(1,5), y = c(f(1), f(5)))
points(x= c(1,5), y = c(f(1), f(5)) pch =2)
points(x= c(1,5), y = c(f(1), f(5)), pch =2)
points(x= c(1,5), y = c(f(1), f(5)), pch =1)
points(x= c(1,5), y = c(f(1), f(5)), pch =20)
plot(f, xlim = c(0, 6), col = "blue")
abline(10-b, (f(5)-f(1))/(5-1), col = "red")
points(x= c(1,5), y = c(f(1), f(5)), pch =20)
b <- (f(5)-f(1))/(5-1)
plot(f, xlim = c(0, 6), col = "blue")
abline(10-b, (f(5)-f(1))/(5-1), col = "red")
points(x= c(1,5), y = c(f(1), f(5)), pch =19)
plot(f, xlim = c(0, 6), col = "blue")
abline(10-b, (f(5)-f(1))/(5-1), col = "red")
points(x= c(1,5), y = c(f(1), f(5)), pch =20)
install.packages(c("bayestestR", "bbmle", "blob", "broom", "cli", "credentials", "e1071", "edmdata", "ggeffects", "googlesheets4", "gss", "haven", "isoband", "jpeg", "Lock5Data", "matrixStats", "paletteer", "performance", "pillar", "rbibutils", "RcppArmadillo", "readr", "renv", "reprex", "rmarkdown", "rsconnect", "rvest", "stringi", "supernova", "survey", "tibble", "tinytex", "utf8", "WRS2", "xfun"))
install.packages(c("bayestestR", "bbmle", "blob", "broom", "cli", "credentials", "e1071", "edmdata", "ggeffects", "googlesheets4", "gss", "haven", "isoband", "jpeg", "Lock5Data", "matrixStats", "paletteer", "performance", "pillar", "rbibutils", "RcppArmadillo", "readr", "renv", "reprex", "rmarkdown", "rsconnect", "rvest", "stringi", "supernova", "survey", "tibble", "tinytex", "utf8", "WRS2", "xfun"))
f6 <- function(x) sin(1/x)
x <- seq(-1, 1, .000001)
plot(f6, xlim = c(-1, 1))
plot(f6(x) ~ x, type = "l", col = "blue")
plot(f6(x) ~ x, type = "l", xlim = c(-.001, .001), col = "blue")
f <- function(x) -1.5*x^2 + 11.5*x
b <- (f(5)-f(1))/(5-1)
plot(f, xlim = c(0, 6), col = "blue")
abline(10-b, (f(5)-f(1))/(5-1), col = "red")
points(x= c(1,5), y = c(f(1), f(5)), pch =20)
f6 <- function(x) sin(1/x)
x <- seq(-1, 1, .000001)
plot(f6, xlim = c(-1, 1))
f <- function(x) -1.5*x^2 + 11.5*x
b <- (f(5)-f(1))/(5-1)
plot(f, xlim = c(0, 6), col = "blue")
abline(10-b, (f(5)-f(1))/(5-1), col = "red")
points(x= c(1,5), y = c(f(1), f(5)), pch =20)
ft_mile <- function(ft) ft*5280
ft_in <- function(ft) ft*12
miles_ft <- function(miles) 5280*miles
ft_in <- function(ft) 12*ft
in_cm <- function(in) 2.54*in
miles_ft <- function(miles) 5280*miles
ft_in <- function(ft) 12*ft
in_cm <- function(in) 2.54*in
in_cm(ft_in(miles_ft(1)))
miles_ft <- function(miles) 5280*miles
ft_in <- function(ft) 12*ft
in_cm <- function(inches) 2.54*inches
in_cm(ft_in(miles_ft(1)))
miles2ft <- function(miles) 5280*miles
ft2in <- function(ft) 12*ft
in2cm <- function(inches) 2.54*inches
in2cm(ft2in(miles2ft(1)))
ft_m <- function(ft) .3048*ft
miles2ft <- function(miles) 5280*miles
ft2in <- function(ft) 12*ft
in2cm <- function(inches) 2.54*inches
ft2m <- function(ft) .3048*ft
in2cm(ft2in(miles2ft(1)))
ft2m(2030)
ft2m(sqrt(2030))
ft2m(sqrt(2030))^2
inverse(miles2ft(1))
install.packages("GoFKernel")
library(GoFKernel)
inverse(miles2ft(1))
inverse(f = miles2ft, 0, 100)
ft2miles <- inverse(f = miles2ft, 0, 100)
ft2miles(5280)
ft2miles <- GOFKernel::inverse(f = miles2ft, 0, 100)
ft2miles <- GoFKernel::inverse(f = miles2ft, 0, 100)
ft2miles(5280)
miles2ft(2)
in2cm(ft2in(miles2ft(2)))
in2cm(ft2in(miles2ft(1)))*2
library(learnr)
learnr::run_tutorial("hello", package = "learnr")
install.packages("oilabs")
105/8
114/8
50/8
215/8
101/8
