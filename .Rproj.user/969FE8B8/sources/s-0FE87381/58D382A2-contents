# Functions
```{r, echo = FALSE}
library(knitr)
```

Two functions, $f(x)$ and $g(x)$ are below:

$$
f(x) = 4 + x - x^2 (\#eq:f) 
$$

$$
g(x) = 2x (\#eq:g)
$$

```{r f-g}
f <- function(x) 4 + x - x^2
g <- function(x) 2*x
```


### Composition of Functions

$$
(f \circ g)(x) = f(g(x)) (\#eq:comp)
$$


```{r tabfg}
x <- seq(0, 3, .5)
fx <- f(x)
gx <- g(x)
f_gx <- f(x) + g(x)   # (f + g)(x) adding functions
f.gx <- f(x) * g(x)   # (f * g)(x) multiplying functions
fgx <- f(g(x))        # (f o g)(x) composition of functions

modelsummary::datasummary_df(data.frame(x, fx, gx, f_gx, f.gx, fgx), title = "Combining Functions")
```


```{r}
x <- seq(0, 3, .001)
plot(f(x) ~ x, type = "l", ylim = c(0, 10), ylab = "")
text(2.8, .3, labels = "f(x)")
lines(g(x) ~ x, col = "grey")
text(2.6, 6.1, "g(x)", col = "grey")
lines(f(x) + g(x) ~ x, col = "red")
text(2.8, 3.6, "f(x) + g(x)", col = "red")
lines(f(x) * g(x) ~ x, col = "blue")
text(2.3, 8, "f(x) * g(x)", col = "blue")
lines(f(g(x)) ~ x, col = "green")
text(1.5, .3, "f(g(x))", col = "green")
```

Note that when $x$ is zero, $f(x)$ is 4, and $g(x)$ is zero.
So it makes sense that $g(x)$ starts at 0 on the y-axis. 
It also make sense that $(f * g)$ starts at zero on the y-axis, because any value of $f(x)$ will be multiplied by zero, which will result in zero.
It is also intuitive that both $f(x)$ and $f(x) + g(x)$ start at 4 on the y axis, because $f(x)$ is 4 when $x$ is zero ($f(x) = 0$), and adding zero to this does not change this value ($f(x) + g(x) = (4 + 0) = 4$, when $x=0$).

### 1.2.4 Finding Inverse Functions


